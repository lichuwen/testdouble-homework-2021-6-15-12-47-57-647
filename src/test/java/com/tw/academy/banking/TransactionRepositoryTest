package com.tw.academy.banking;

import com.tw.banking.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;

class TransactionRepositoryTest {

    private Clock clock;
    private TransactionRepository transactionRepository;
    private final static String date = "2021-06-21";

    @BeforeEach
    public void setUp() {
        clock = Mockito.mock(Clock.class);
        transactionRepository = new TransactionRepository(clock);

        Mockito.when(clock.todayAsString()).thenReturn(date);
    }

    @Test
    public void should_add_amount_when_call() {
        //given
        int amount = 1;
        //when
        transactionRepository.addDeposit(amount);
        //then
        Mockito.verify(clock, Mockito.times(1)).todayAsString();
    }

    @Test
    public void should_add_withdraw_when_call(){
        //given
        int amount = 1;
        //when
        transactionRepository.addWithdraw(amount);
        //then
        Mockito.verify(clock, Mockito.times(1)).todayAsString();
    }

    @Test
    public void should_unmodifiableList_when_transactions(){
        //given
        transactionRepository.addWithdraw(1);
        //when
        List<Transaction> result = transactionRepository.allTransactions();
        //then
        assertEquals(date, result.get(0).date());
        assertEquals(-1, result.get(0).amount());
    }

}
